name: Build and Push Docker image to Amazon ECR

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # e.g., friendly-wager

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" --image-scanning-configuration scanOnPush=true --region "$AWS_REGION"

      - name: Build Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}
          docker build -t ${IMAGE_URI}:${{ github.sha }} -t ${IMAGE_URI}:latest .

      - name: Push Docker image
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}
          docker push ${IMAGE_URI}:${{ github.sha }}
          docker push ${IMAGE_URI}:latest

      - name: Output image URI
        run: echo "image_uri=${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:${{ github.sha }}" >> $GITHUB_OUTPUT
